/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TrendingRouteImport } from './routes/trending'
import { Route as ReportsRouteImport } from './routes/reports'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as MapRouteImport } from './routes/map'
import { Route as FeedRouteImport } from './routes/feed'
import { Route as EventsRouteImport } from './routes/events'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as AlertsRouteImport } from './routes/alerts'
import { Route as IndexRouteImport } from './routes/index'

const TrendingRoute = TrendingRouteImport.update({
  id: '/trending',
  path: '/trending',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsRoute = ReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const MapRoute = MapRouteImport.update({
  id: '/map',
  path: '/map',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedRoute = FeedRouteImport.update({
  id: '/feed',
  path: '/feed',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsRoute = EventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const AlertsRoute = AlertsRouteImport.update({
  id: '/alerts',
  path: '/alerts',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/alerts': typeof AlertsRoute
  '/chat': typeof ChatRoute
  '/events': typeof EventsRoute
  '/feed': typeof FeedRoute
  '/map': typeof MapRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/trending': typeof TrendingRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/alerts': typeof AlertsRoute
  '/chat': typeof ChatRoute
  '/events': typeof EventsRoute
  '/feed': typeof FeedRoute
  '/map': typeof MapRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/trending': typeof TrendingRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/alerts': typeof AlertsRoute
  '/chat': typeof ChatRoute
  '/events': typeof EventsRoute
  '/feed': typeof FeedRoute
  '/map': typeof MapRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/trending': typeof TrendingRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/alerts'
    | '/chat'
    | '/events'
    | '/feed'
    | '/map'
    | '/profile'
    | '/reports'
    | '/trending'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/alerts'
    | '/chat'
    | '/events'
    | '/feed'
    | '/map'
    | '/profile'
    | '/reports'
    | '/trending'
  id:
    | '__root__'
    | '/'
    | '/alerts'
    | '/chat'
    | '/events'
    | '/feed'
    | '/map'
    | '/profile'
    | '/reports'
    | '/trending'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AlertsRoute: typeof AlertsRoute
  ChatRoute: typeof ChatRoute
  EventsRoute: typeof EventsRoute
  FeedRoute: typeof FeedRoute
  MapRoute: typeof MapRoute
  ProfileRoute: typeof ProfileRoute
  ReportsRoute: typeof ReportsRoute
  TrendingRoute: typeof TrendingRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/trending': {
      id: '/trending'
      path: '/trending'
      fullPath: '/trending'
      preLoaderRoute: typeof TrendingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/map': {
      id: '/map'
      path: '/map'
      fullPath: '/map'
      preLoaderRoute: typeof MapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feed': {
      id: '/feed'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof FeedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/alerts': {
      id: '/alerts'
      path: '/alerts'
      fullPath: '/alerts'
      preLoaderRoute: typeof AlertsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AlertsRoute: AlertsRoute,
  ChatRoute: ChatRoute,
  EventsRoute: EventsRoute,
  FeedRoute: FeedRoute,
  MapRoute: MapRoute,
  ProfileRoute: ProfileRoute,
  ReportsRoute: ReportsRoute,
  TrendingRoute: TrendingRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
